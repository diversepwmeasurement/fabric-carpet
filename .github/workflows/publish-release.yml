jobs:
  Build-And-Publish:
    needs:
    - Get-Properties
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      id: getbranchinfo
      name: Get info from branch to run
      run: "if ${{ matrix.branch == 'Snapshots'}}; then\n  echo \"branchname=${{ needs.Get-Properties.outputs.extra-branch-name\
        \ }}\" >> $GITHUB_OUTPUT\n  echo \"version=${{ needs.Get-Properties.outputs.extra-branch-curse-version\
        \ }}\" >> $GITHUB_OUTPUT\n  echo \"curse-versions=${{ needs.Get-Properties.outputs.extra-branch-curse-version\
        \ }}\" >> $GITHUB_OUTPUT\nelse\n  echo \"version=${{ needs.Get-Properties.outputs.minecraft-version\
        \ }}\" >> $GITHUB_OUTPUT\n  echo \"curse-versions=${{ needs.Get-Properties.outputs.curse-versions\
        \ }}\" >> $GITHUB_OUTPUT\nfi\n"
    - continue-on-error: true
      name: Checkout the sources
      uses: actions/checkout@v3
      with:
        ref: ${{ steps.getbranchinfo.outputs.branchname }}
    - continue-on-error: true
      name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        cache: gradle
        distribution: temurin
        java-version: 21
    - continue-on-error: true
      name: Grant execute permission to gradlew
      run: chmod +x gradlew
    - continue-on-error: true
      name: Build with Gradle
      run: ./gradlew build
    - continue-on-error: true
      id: findjar
      name: Find correct JAR
      run: 'output="$(find build/libs/ ! -name "*-dev.jar" ! -name "*-sources.jar"
        -type f -printf "%f\n")"

        echo "jarname=$output" >> $GITHUB_OUTPUT

        '
    - continue-on-error: true
      name: Save build artifacts in the action
      uses: actions/upload-artifact@v3
      with:
        name: Artifacts for ${{ matrix.branch }}
        path: build/libs
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Upload to the Github release
      uses: actions/upload-release-asset@v1
      with:
        asset_content_type: application/java-archive
        asset_name: ${{ steps.findjar.outputs.jarname }}
        asset_path: build/libs/${{ steps.findjar.outputs.jarname }}
        upload_url: ${{ github.event.release.upload_url }}
    - continue-on-error: true
      name: Upload to Curseforge
      uses: itsmeow/curseforge-upload@v3
      with:
        changelog: ${{ github.event.release.body }}
        changelog_type: markdown
        display_name: Carpet v${{ needs.Get-Properties.outputs.carpet-version }} for
          ${{ steps.getbranchinfo.outputs.version }}
        file_path: build/libs/${{ steps.findjar.outputs.jarname }}
        game_endpoint: minecraft
        game_versions: 7499,4458,${{ steps.getbranchinfo.outputs.curse-versions }}
        project_id: 349239
        release_type: ${{ needs.Get-Properties.outputs.release-type }}
        token: ${{ secrets.CF_API_TOKEN }}
    - continue-on-error: true
      name: Ask Gradle to publish
      run: ./gradlew publish
    - continue-on-error: true
      name: Save publish folder in action's artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Maven publishing artifacts for ${{ matrix.branch }}
        path: publish/carpet/fabric-carpet/
    strategy:
      matrix:
        branch:
        - Release
        - Snapshots
        exclude:
        - branch: ${{ needs.Get-Properties.outputs.matrix-exclude-branch }}
  Get-Properties:
    outputs:
      carpet-version: ${{ steps.properties.outputs.mod_version }}
      curse-versions: ${{ steps.properties.outputs.release-curse-versions }}
      extra-branch-curse-version: ${{ steps.properties.outputs.release-extra-curse-version
        }}
      extra-branch-name: ${{ steps.properties.outputs.release-extra-branch-name }}
      matrix-exclude-branch: ${{ steps.processmatrix.outputs.matrix-to-exclude }}
      minecraft-version: ${{ steps.properties.outputs.minecraft_version }}
      release-type: ${{ steps.type.outputs.release-type }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout the sources
      uses: actions/checkout@v3
    - continue-on-error: true
      id: type
      name: Determine release type
      run: "if ${{ github.event.release.prerelease }}; then\n  echo \"release-type=beta\"\
        \ >> $GITHUB_OUTPUT\nelse\n  echo \"release-type=release\" >> $GITHUB_OUTPUT\n\
        fi\n"
    - continue-on-error: true
      id: properties
      name: Read relevant fields from gradle.properties
      run: "path='./gradle.properties'\nfor property in mod_version minecraft_version\
        \ release-curse-versions release-extra-branch release-extra-branch-name release-extra-curse-version\n\
        do\n  result=$(sed -n \"/^[[:space:]]*$property[[:space:]]*=[[:space:]]*/s/^[[:space:]]*$property[[:space:]]*=[[:space:]]*//p\"\
        \ \"$path\")\n  echo \"$property: $result\"\n  echo \"$property=$result\"\
        \ >> $GITHUB_OUTPUT\ndone\n"
    - continue-on-error: true
      id: processmatrix
      name: Process property for matrix
      run: "if ! ${{ steps.properties.outputs.release-extra-branch }}; then\n  echo\
        \ \"matrix-to-exclude=Snapshots\" >> $GITHUB_OUTPUT\nfi\n"
    - continue-on-error: true
      env:
        READ_VERSION: ${{ steps.properties.outputs.mod_version }}
      uses: actions/github-script@v6
      with:
        script: "const { READ_VERSION } = process.env;\nconsole.log('Read version\
          \ is: ' + READ_VERSION);\nlet releases = (await github.rest.repos.listReleases({\n\
          \  owner: context.repo.owner,\n  repo: context.repo.repo\n})).data;\nconsole.log('Previous\
          \ release was: ' + releases[1].name);\nfor (let release of releases.slice(1))\
          \ {\n  if (release.name.includes(READ_VERSION))\n    core.setFailed('Version\
          \ number is the same as a previous release!')\n}\n"
  Merge-Scarpet-Docs:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout the sources
      uses: actions/checkout@v3
      with:
        ref: master
    - continue-on-error: true
      name: Merge docs
      run: './mergedoc.sh

        '
    - continue-on-error: true
      name: Commit merged docs
      run: 'git config --global user.name ''github-actions[bot]''

        git config --global user.email ''github-actions[bot]@users.noreply.github.com''

        git commit -am "Merge docs for ''${{ github.event.release.name }}''" || exit
        0

        git push

        '
  Publish-To-Discord:
    needs:
    - Build-And-Publish
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Publish to discord
      uses: Crec0/announce-n-crosspost@v1
      with:
        bot-token: ${{ secrets.DISCORD_BOT_TOKEN }}
        channel: '897934715200339999'
        content: "**${{ github.event.release.name }}** has been released!\n\n${{ github.event.release.body\
          \ }}\n\u200B\nGet it on Github Releases: <${{ github.event.release.html_url\
          \ }}>\nOr on CurseForge\n"
  Update-Rules-Wiki:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout Carpet sources
      uses: actions/checkout@v3
    - continue-on-error: true
      name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        cache: gradle
        distribution: temurin
        java-version: 21
    - continue-on-error: true
      name: Checkout wiki
      uses: actions/checkout@v3
      with:
        path: wiki
        repository: ${{github.repository}}.wiki
    - continue-on-error: true
      name: Run rule printer into the wiki page
      run: 'chmod +x gradlew

        ./gradlew runServer --args="-- -carpetDumpRules -dumpPath ../wiki/Current-Available-Settings.md"

        '
    - continue-on-error: true
      name: Commit updated wiki page
      run: 'cd wiki

        git config --global user.name ''github-actions-bot'' # Releases don''t have
        valid commiter info :(

        git config --global user.email ''github-actions[bot]@users.noreply.github.com''

        git commit -am "Update wiki for ''${{ github.event.release.name }}''" || exit
        0

        git push

        '
name: Publish Release
on:
  repository_dispatch:
    types: trigger-ga___publish-release.yml
